
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userid: 'userid',
  useremailid: 'useremailid',
  username: 'username',
  password: 'password',
  role: 'role',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CourseScalarFieldEnum = {
  courseid: 'courseid',
  title: 'title',
  description: 'description',
  price: 'price',
  instructor: 'instructor',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LessonScalarFieldEnum = {
  lessonid: 'lessonid',
  courseid: 'courseid',
  title: 'title',
  videourl: 'videourl',
  display_order: 'display_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LessonResourceScalarFieldEnum = {
  resourceid: 'resourceid',
  lessonid: 'lessonid',
  resource_link: 'resource_link',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  enrollmentid: 'enrollmentid',
  userid: 'userid',
  courseid: 'courseid',
  enrolled_on: 'enrolled_on',
  progress_pct: 'progress_pct',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LessonCompletionScalarFieldEnum = {
  completionid: 'completionid',
  userid: 'userid',
  lessonid: 'lessonid',
  completed_on: 'completed_on',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuestionScalarFieldEnum = {
  questionid: 'questionid',
  text: 'text',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuizScalarFieldEnum = {
  quizid: 'quizid',
  courseid: 'courseid',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  quizid: 'quizid',
  questionid: 'questionid',
  display_order: 'display_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuestionOptionScalarFieldEnum = {
  optionid: 'optionid',
  questionid: 'questionid',
  text: 'text',
  is_correct: 'is_correct',
  display_order: 'display_order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuizAttemptScalarFieldEnum = {
  attemptid: 'attemptid',
  userid: 'userid',
  quizid: 'quizid',
  started_at: 'started_at',
  finished_at: 'finished_at',
  score: 'score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuizAnswerScalarFieldEnum = {
  answerid: 'answerid',
  attemptid: 'attemptid',
  optionid: 'optionid',
  is_correct: 'is_correct',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  tokenHash: 'tokenHash',
  userid: 'userid',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  revoked: 'revoked'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Course: 'Course',
  Lesson: 'Lesson',
  LessonResource: 'LessonResource',
  Enrollment: 'Enrollment',
  LessonCompletion: 'LessonCompletion',
  Question: 'Question',
  Quiz: 'Quiz',
  QuizQuestion: 'QuizQuestion',
  QuestionOption: 'QuestionOption',
  QuizAttempt: 'QuizAttempt',
  QuizAnswer: 'QuizAnswer',
  RefreshToken: 'RefreshToken'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
